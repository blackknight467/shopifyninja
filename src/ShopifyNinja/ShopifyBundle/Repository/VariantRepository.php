<?php

namespace ShopifyNinja\ShopifyBundle\Repository;

use Doctrine\ORM\EntityRepository;

/**
 * VariantRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class VariantRepository extends EntityRepository
{
	public function getAllVariants($array = false) {
		$queryBuilder = $this->getEntityManager()->createQueryBuilder();

		$queryBuilder->select(array('v', 'p'))
			->from('ShopifyNinjaShopifyBundle:Variant', 'v')
			->leftJoin('v.product', 'p');

		if ($array) {
			return $queryBuilder->getQuery()->getArrayResult();
		}

		return $queryBuilder->getQuery()->getResult();

	}

	public function getById($id) {
		$queryBuilder = $this->getEntityManager()->createQueryBuilder();

		$queryBuilder->select(array('v', 'p'))
			->from('ShopifyNinjaShopifyBundle:Variant', 'v')
			->leftJoin('v.product', 'p')
			->where('v.id = :id')
			->setParameter('id', $id);

		return $queryBuilder->getQuery()->getOneOrNullResult();

	}

	public function getByOptions($pid, $option1, $option2, $option3) {
		$queryBuilder = $this->getEntityManager()->createQueryBuilder();

		$queryBuilder->select(array('v', 'p'))
			->from('ShopifyNinjaShopifyBundle:Variant', 'v')
			->leftJoin('v.product', 'p')
			->where('v.option1 = :op1')
			->andWhere('v.option2 = :op2')
			->andWhere('v.option3 = :op3')
			->andWhere('p.id = :pid')
			->setParameter('op1', $option1)
			->setParameter('op2', $option2)
			->setParameter('op3', $option3)
			->setParameter('pid', $pid);

		return $queryBuilder->getQuery()->getOneOrNullResult();

	}


	public function getVariantsForProduct($prod, $array = false) {
		$queryBuilder = $this->getEntityManager()->createQueryBuilder();

		$queryBuilder->select(array('v'))
			->from('ShopifyNinjaShopifyBundle:Variant', 'v')
			->where('v.product = :prod')
			->setParameter('prod', $prod);
			
		if ($array) {
			return $queryBuilder->getQuery()->getArrayResult();
		}

		return $queryBuilder->getQuery()->getResult();
	}
}
